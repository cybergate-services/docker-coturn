version: '3'
services:
  letsencrypt:
    image: cybergatelabs/letsencrypt
    restart: unless-stopped
    container_name: letsencrypt
    hostname: letsencrypt
    cap_add:
      - NET_ADMIN
    volumes:
      - ./data/letsencrypt/config:/config
    env_file: 
      - letsencrypt/letsencrypt.env
    networks:
      - frontend
      - backend
      
  postgresql:
    build:
      context: ./postgresql
    container_name: postgresql
    hostname: postgresql
    restart: unless-stopped
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    env_file: 
      - postgresql/postgresql.env
    networks:
      - backend
  
  dbadmin:
    image: cybergatelabs/dbadmin
    container_name: dbadmin
    hostname: dbadmin
    restart: always
    #ports:
    #  - 8080:8080
    networks:
      - backends    
    
  coturn:
    image: cybergatelabs/coturn
    restart: always
    env_file: 
      - coturn/coturn.env
    volumes:
      - ./${LE_SSL_CERT_PATH}/${TURN_SERVER_FQDN}:/etc/ssl/le
    ports:
    ## STUN/TURN
      - "3478:3478"
      - "3478:3478/udp"
      - "3479:3479"
      - "3479:3479/udp"
      - "80:80"
      - "80:80/udp"
    ## STUN/TURN SSL
      - "5349:5349"
      - "5349:5349/udp"
      - "5350:5350"
      - "5350:5350/udp"
      - "8443:443"
      - "8443:443/udp"
    # Relay Ports
    # - "49152-65535:49152-65535"
    # - "49152-65535:49152-65535/udp"
    networks:
      - frontend
      - backend
    depends_on:
      - postgresql
      - letsencrypt
    env_file:
      - coturn/coturn.env
      - postgresql/postgresql.env
volumes:
  postgresql-data:

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
  backend:
    internal: true
